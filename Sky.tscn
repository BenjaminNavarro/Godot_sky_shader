[gd_scene load_steps=7 format=2]

[ext_resource path="res://shaders/Sky.shader" type="Shader" id=3]
[ext_resource path="res://shaders/noise.png" type="Texture" id=4]
[ext_resource path="res://default_env.tres" type="Environment" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

var iTime=0.0
func _ready():
	$Env.environment.background_sky.set_panorama($sky_viewport.get_texture())
	pass

func _process(delta):
	iTime+=delta
	$sky_viewport/sky_texture.material.set(\"shader_param/iTime\",iTime)

func _cov_scb(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/COVERAGE\",value)

func _absb_scb(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/ABSORPTION\",value)
	

func _thick_scb(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/THICKNESS\",value)

func _quality_scb(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/STEPS\",value)

func _wind(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/WIND\",Vector3(1.0,0.0,1.0).normalized()*value)


func _lighting_on():
	$sky_viewport/sky_texture.material.set(\"shader_param/LIGHTTING_POS\",Vector3(0.0,1.0,0.0).normalized());
	$sky_viewport/sky_texture.material.set(\"shader_param/LIGHTING_STRIKE\",true);

func _lighting_off():
	$sky_viewport/sky_texture.material.set(\"shader_param/LIGHTING_STRIKE\",false);
	
func _DAY_TIME_changed(value):
	var day_time: Vector2 = Vector2()
	day_time.x = floor(value/0.0835) #Период дня
	day_time.y = fmod(value,0.0835)*12.0; #Время в периоде в диапазоне от 0 до 1.
	var phi: float =0.0;
	phi = ((day_time.x-1.0) *30.0+day_time.y *30.0)*0.0174533
	var sun_pos: Vector3=Vector3(0.0,-1.0,0.0).rotated(Vector3(1.0,0.0,0.0),phi)
	var moon_pos: Vector3=Vector3(0.0,1.0,0.0).rotated(Vector3(1.0,0.0,0.0),phi)
	$sky_viewport/sky_texture.material.set(\"shader_param/SUN_POS\",sun_pos)
	$sky_viewport/sky_texture.material.set(\"shader_param/MOON_POS\",moon_pos)
	
	$Sun.rotation.x = phi+PI/2.0
	$Moon.rotation.x = phi-PI/2.0
	
	var temp: float =0.0
	if (day_time.x == 0.0 or day_time.x == 1.0 or day_time.x == 2.0 or day_time.x == 11.0):
		temp = 0.0 #ночь
		$Sun.visible = false
		$Moon.visible = true
	if (day_time.x == 3.0):
		temp = 1.0 #от ночи к рассвету
		$Moon.visible = true
		$Sun.visible = true
	if (day_time.x == 4.0):
		temp = 2.0 #от рассвета к дню
		$Moon.visible = false
		$Sun.visible = true
	if (day_time.x == 5.0 or day_time.x == 6.0 or day_time.x == 7.0 or day_time.x == 8.0):
		temp = 3.0 #день
		$Moon.visible = false
		$Sun.visible = true
	if (day_time.x == 9.0):
		temp = 4.0 #от дня к закату
		$Moon.visible = false
		$Sun.visible = true
	if (day_time.x == 10.0):
		temp = 5.0 #от заката к ночи
		$Moon.visible = true
		$Sun.visible = true
	day_time.x = temp;
	$sky_viewport/sky_texture.material.set(\"shader_param/DAY_TIME\",day_time)
"

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 3 )
shader_param/iTime = null
shader_param/WIND = Vector3( 0, 0, 0.1 )
shader_param/DAY_TIME = null
shader_param/SUN_POS = null
shader_param/MOON_POS = null
shader_param/COVERAGE = 0.5
shader_param/THICKNESS = 25.0
shader_param/ABSORPTION = 1.0
shader_param/STEPS = 25
shader_param/LIGHTING_STRIKE = null
shader_param/LIGHTTING_POS = Vector3( 0, 1, 0 )
shader_param/night_color_sky = null
shader_param/sunset_color_sky = Color( 0.3, 0.6, 0.8, 1 )
shader_param/sunset_color_horizon = Color( 0.8, 0.35, 0.1, 1 )
shader_param/day_color_sky = Color( 0, 0.101961, 0.4, 1 )
shader_param/day_color_horizon = Color( 0.3, 0.6, 0.8, 1 )
shader_param/sun_color = Color( 1, 0.705882, 0.54902, 1 )
shader_param/moon_color = Color( 0.588235, 0.588235, 0.784314, 1 )
shader_param/iChannel0 = ExtResource( 4 )

[sub_resource type="ImageTexture" id=3]
size = Vector2( 1024, 1024 )

[node name="Sky" type="Spatial"]
script = SubResource( 1 )

[node name="Env" type="WorldEnvironment" parent="."]
environment = ExtResource( 6 )

[node name="sky_viewport" type="Viewport" parent="."]
size = Vector2( 1024, 1024 )
render_target_update_mode = 3

[node name="sky_texture" type="Sprite" parent="sky_viewport"]
material = SubResource( 2 )
texture = SubResource( 3 )
centered = false

[node name="Sun" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1, 0 )
shadow_enabled = true
shadow_color = Color( 0.3, 0.3, 0.3, 1 )

[node name="Moon" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 1, 0 )
light_color = Color( 0.588235, 0.588235, 0.784314, 1 )
light_energy = 0.15
shadow_enabled = true

[node name="Control" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Control"]
margin_left = 25.0
margin_top = 3.763
margin_right = 268.0
margin_bottom = 17.763
text = "Control: Arrow + Mouse (click + move)"

[node name="Label2" type="Label" parent="Control"]
margin_left = 5.0
margin_top = 177.103
margin_right = 103.0
margin_bottom = 191.103
text = "Clouds params:"

[node name="Label3" type="Label" parent="Control"]
margin_left = 5.0
margin_top = 215.469
margin_right = 73.0
margin_bottom = 229.469
text = "COVERAGE"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label3"]
margin_left = 5.0
margin_top = 17.2915
margin_right = 145.0
margin_bottom = 30.2915
max_value = 1.0
value = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label4" type="Label" parent="Control"]
margin_left = 5.0
margin_top = 250.052
margin_right = 90.0
margin_bottom = 264.052
text = "ABSORPTION"

[node name="HScrollBar" type="HScrollBar" parent="Control/Label4"]
margin_left = 5.0
margin_top = 17.2916
margin_right = 145.0
margin_bottom = 29.2916
max_value = 10.0
value = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label5" type="Label" parent="Control"]
margin_left = 5.0
margin_top = 291.66
margin_right = 105.0
margin_bottom = 305.66
text = "THICKNESS"

[node name="HScrollBar" type="HScrollBar" parent="Control/Label5"]
margin_left = 5.0
margin_top = 16.2108
margin_right = 145.0
margin_bottom = 28.2108
value = 25.0

[node name="Label6" type="Label" parent="Control"]
margin_left = 5.0
margin_top = 326.14
margin_right = 82.0
margin_bottom = 340.14
text = "Quality STEPS (1-100)"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label6"]
margin_left = 5.0
margin_top = 16.2108
margin_right = 145.0
margin_bottom = 28.2108
value = 25.0

[node name="Label7" type="Label" parent="Control"]
margin_left = 12.6
margin_top = 553.554
margin_right = 80.6001
margin_bottom = 567.554
text = "DAY_TIME"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label7"]
margin_left = 5.0
margin_top = 17.0
margin_right = 989.0
margin_bottom = 29.0
max_value = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label8" type="Label" parent="Control"]
margin_left = 7.3327
margin_top = 370.594
margin_right = 75.3327
margin_bottom = 384.594
text = "wind_strength"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label8"]
margin_left = 5.0
margin_top = 17.2915
margin_right = 145.0
margin_bottom = 30.2915
max_value = 1.0
value = 0.1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="Control"]
margin_left = 14.0
margin_top = 414.0
margin_right = 147.0
margin_bottom = 434.0
text = "lighting stirke"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="value_changed" from="Control/Label3/HScrollBar" to="." method="_cov_scb"]
[connection signal="value_changed" from="Control/Label4/HScrollBar" to="." method="_absb_scb"]
[connection signal="value_changed" from="Control/Label5/HScrollBar" to="." method="_thick_scb"]
[connection signal="value_changed" from="Control/Label6/HScrollBar" to="." method="_quality_scb"]
[connection signal="value_changed" from="Control/Label7/HScrollBar" to="." method="_DAY_TIME_changed"]
[connection signal="value_changed" from="Control/Label8/HScrollBar" to="." method="_wind"]
[connection signal="button_down" from="Control/Button" to="." method="_lighting_on"]
[connection signal="button_up" from="Control/Button" to="." method="_lighting_off"]
